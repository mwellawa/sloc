PROCEDURE "sloc.db::fetchPostcode" ( 
	
	in	im_postcode 	nvarchar(4),
	in	im_state		nvarchar(3),
	in	im_create		boolean,
	out	ex_postcode		nvarchar(4),
	out	ex_state		nvarchar(3),
	out	ex_error		nvarchar(100)
		
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER AS
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
	
	declare v_count integer;
	
	select count(*) 
	into v_count 
	from "sloc.db::model.State"
	where "state" = im_state;
	if v_count > 0 then
		
		select count(*) into v_count from "sloc.db::model.Postcode"
		where "postcode" = im_postcode and "state.state" = im_state;
		if v_count > 0 then
		
			select "postcode", "state.state" 
			into ex_postcode, ex_state 
			from "sloc.db::model.Postcode"
			where "postcode" = im_postcode and "state.state" = im_state;		
		
		else
		
			if :im_create = true then
				
				insert into "sloc.db::model.Postcode" 
				values(im_postcode, im_state);
				
				select count(*) 
				into v_count 
				from "sloc.db::model.Postcode"
				where "postcode" = im_postcode and "state.state" = im_state;
				if :v_count > 0 then
				
					select "postcode", "state.state" 
					into ex_postcode, ex_state 
					from "sloc.db::model.Postcode"
					where "postcode" = im_postcode and "state.state" = im_state;			
				else
					ex_error = 'Error inserting postcode ' || im_postcode || ' for state ' || im_state;	
				end if;
			else
				ex_error = 'Postcode ' || im_postcode || ' not found for State ' || im_state;
			end if;		
			
		end if;
	else
		ex_error = 'Invalid state ' || im_state;
	end if;
   
END